<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="logHome" value="E:/java/logs" />

    <!-- 控制台输出 -->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg  %n</pattern>
        </encoder>
    </appender>
    <!-- error-->
    <appender name="errorFile"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--只输出error级别的日志-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <!-- 当前日志路径 -->
        <file>${logHome}/error.log</file>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--历史日志的路径-->
            <fileNamePattern>${logHome}/error/%d{yyyy-MM-dd}/%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
            <!--保留60天的日志-->
            <maxHistory>60</maxHistory>
            <!--每天的日志按1GB拆分成多个文件-->
            <maxFileSize>1GB</maxFileSize>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>
    <!-- info -->
    <appender name="info"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 当前日志路径 -->
        <file>${logHome}/info.log</file>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--历史日志的路径-->
            <fileNamePattern>${logHome}/info/%d{yyyy-MM-dd}/%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
            <!--保留60天的日志-->
            <maxHistory>60</maxHistory>
            <!--每天的日志按1GB拆分成多个文件-->
            <maxFileSize>1GB</maxFileSize>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!--com包下的日志只输出info及以上级别的；additivity="false":com包下的所有日志不会由root中配置的appender输出（即使是trace等没有在这个logger中打印的信息）-->
    <logger name="com" level="info" additivity="false">
        <!--日志具体输出方式-->
        <appender-ref ref="stdout" />
        <appender-ref ref="info" />
        <appender-ref ref="errorFile" />
    </logger>

    <!--root是所有logger的祖先；
        如果子logger不指定level，则会继承其父logger的level；
        如果子logger不指定additivity为false，则打印信息会传递到父logger，指定additivity为false后，打印信息不再向父logger传递；
        logger的父子关系是根据name来定的，比如name为com的logger是name为com.taojw的logger的父亲；
    -->
    <root level="INFO">
        <!--日志具体输出方式-->
        <appender-ref ref="stdout" />
        <appender-ref ref="info" />
        <appender-ref ref="errorFile" />
    </root>

</configuration>